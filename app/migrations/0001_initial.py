# Generated by Django 3.1.7 on 2022-10-11 14:46

import app.models.file
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import smart_selects.db_fields
import ulid.api.api
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pg_name', models.CharField(max_length=100)),
                ('pg_phone_number', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=15)),
                ('invoice_photo', models.ImageField(blank=True, null=True, upload_to='diana/%Y/%m/%d')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('file', app.models.file.FileField(upload_to='diana/%Y/%m/%d')),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='Ngày tạo')),
            ],
            options={
                'verbose_name': 'File',
                'verbose_name_plural': 'Files',
                'db_table': 'file',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Gift',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('value', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('code', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('index', models.IntegerField(blank=True, default=0, null=True)),
                ('hide', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Gift',
                'verbose_name_plural': 'Gifts',
                'db_table': 'gift',
                'ordering': ['index'],
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('code', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='invoices', to='app.customer')),
            ],
            options={
                'verbose_name': 'Invoice',
                'verbose_name_plural': 'Invoices',
                'db_table': 'invoice',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('code', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('index', models.IntegerField(blank=True, default=0, null=True)),
                ('hide', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'db_table': 'product',
                'ordering': ['index'],
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('index', models.IntegerField(blank=True, default=0, null=True)),
                ('hide', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Province',
                'verbose_name_plural': 'Provinces',
                'db_table': 'province',
                'ordering': ['index'],
            },
        ),
        migrations.CreateModel(
            name='SurveyQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255)),
                ('code', models.CharField(blank=True, default=None, max_length=255, null=True, unique=True)),
                ('limit_answer', models.IntegerField(blank=True, default=0, null=True)),
                ('index', models.IntegerField(default=0)),
                ('hide', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Survey Question',
                'verbose_name_plural': 'Survey Questions',
                'db_table': 'survey_question',
                'ordering': ['index'],
            },
        ),
        migrations.CreateModel(
            name='System',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('index', models.IntegerField(blank=True, default=0, null=True)),
                ('hide', models.BooleanField(default=False)),
                ('province', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='systems', to='app.province')),
            ],
            options={
                'verbose_name': 'System',
                'verbose_name_plural': 'Systems',
                'db_table': 'system',
                'ordering': ['index'],
            },
        ),
        migrations.CreateModel(
            name='SurveyAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=255)),
                ('code', models.CharField(blank=True, default=None, max_length=255, null=True, unique=True)),
                ('index', models.IntegerField(default=0)),
                ('hide', models.BooleanField(default=False)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='app.surveyquestion')),
            ],
            options={
                'verbose_name': 'Survey Answer',
                'verbose_name_plural': 'Survey Answers',
                'db_table': 'survey_answer',
                'ordering': ['index'],
            },
        ),
        migrations.CreateModel(
            name='Market',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('index', models.IntegerField(blank=True, default=0, null=True)),
                ('hide', models.BooleanField(default=False)),
                ('system', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='markets', to='app.system')),
            ],
            options={
                'verbose_name': 'Market',
                'verbose_name_plural': 'Markets',
                'db_table': 'market',
                'ordering': ['index'],
            },
        ),
        migrations.CreateModel(
            name='InvoiceProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('total', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='products', to='app.invoice')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='products', to='app.product')),
            ],
            options={
                'verbose_name': 'Invoice Product',
                'verbose_name_plural': 'Invoice Products',
                'db_table': 'invoice_product',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='InvoiceGift',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('value', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('total', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('gift', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='gifts', to='app.gift')),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='gifts', to='app.invoice')),
            ],
            options={
                'verbose_name': 'Invoice Gift',
                'verbose_name_plural': 'Invoice Gifts',
                'db_table': 'invoice_gift',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='DailyGift',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pg_name', models.CharField(blank=True, max_length=255, null=True)),
                ('pg_phone_number', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateField(auto_now_add=True)),
                ('quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('remaining', models.IntegerField(blank=True, default=0, null=True)),
                ('bill', models.CharField(blank=True, choices=[('BILL_59', 'BILL_59'), ('BILL_79', 'BILL_79'), ('BILL_129', 'BILL_129')], default=None, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('gift', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.gift')),
            ],
            options={
                'verbose_name': 'Daily Gift',
                'verbose_name_plural': 'Daily Gifts',
                'db_table': 'daily_gift',
            },
        ),
        migrations.AddField(
            model_name='customer',
            name='market',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.market'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.CharField(default=ulid.api.api.Api.new, editable=False, max_length=32, primary_key=True, serialize=False, unique=True)),
                ('sid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('phone_number', models.CharField(blank=True, default='', max_length=255)),
                ('day_of_birth', models.DateField(null=True)),
                ('full_address', models.CharField(blank=True, default='', max_length=255)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['id'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('other_answer', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('answers', smart_selects.db_fields.ChainedManyToManyField(blank=True, chained_field='question', chained_model_field='question', help_text='Select answers', null=True, to='app.SurveyAnswer', verbose_name='Answers')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='surveys', to='app.customer')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.surveyquestion')),
            ],
            options={
                'verbose_name': 'Survey',
                'verbose_name_plural': 'Surveys',
                'db_table': 'survey',
                'ordering': ['question__index'],
                'unique_together': {('customer', 'question')},
            },
        ),
    ]
